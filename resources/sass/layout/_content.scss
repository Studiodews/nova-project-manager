
#content {
	display: flex;
	flex-direction: column;
	min-height: calc( 100vh - #{$nav-width} );
	padding: $content-padding;

	.no-content {
		margin: auto;
		align-self: center;
		justify-self: center;
		color: $text-color-fade;
		text-align: center;

		p {
			font-size: 24px;
		}

		.button {
			margin-top: 50px;
			line-height: 36px;
		}
	}

	> div {
		max-width: 100%;

		&.wide {
			width: $width-large;
		}

		&.medium {
			width: $width-medium;
		}

		&.small {
			width: $width-small;
		}

		&.full {
			width: 100%;
		}

		&.center {
			margin-left: auto;
			margin-right: auto;
		}
	}
}

// Content lists.
.content-list {
	.item {
		line-height: $content-padding;

		> a {
			color: inherit;
			overflow: hidden;
			position: relative;
		}

		.title {
			color: $text-color;
		}

		.subtitle {
			color: $text-color-fade;
			margin-top: 5px;
		}

		.item-action {
			width: 24px;
			cursor: pointer;
			font-size: 16px;
			text-align: center;
			color: $text-color-fade;
			transition: color $transition-duration;
			display: inline-block;

			&:hover,
			&:focus {
				color: $text-color;
			}
		}

		.bg-icon {
			position: absolute;
			bottom: 10px;
			right: 10px;
			font-size: 32px;
			opacity: 0.15;
		}
	}

	// Grid display.
	&.-grid {
		display: flex;
		flex-wrap: wrap;
		flex-direction: row;
		align-content: flex-start;
		margin: $content-padding / -2;
		max-width: calc( 100% + #{$content-padding} ) !important;

		.item {
			flex-grow: 1;
			line-height: inherit;
			padding: $content-padding / 2;

			> a,
			> div {
				display: flex;
				flex-direction: column;
				justify-content: space-between;
				padding: $content-padding / 2 $content-padding * 0.75;
				height: 100%;
				border: 1px solid $body-border;
				border-radius: $border-radius;
				background-color: $body-bg;
				box-shadow: 0 0 0 transparent;
			}

			> a {
				transition: background-color $transition-duration, box-shadow $transition-duration;

				&:hover {
					background-color: $body-bg-alt;
					box-shadow: 0 1px 6px rgba(0, 0, 0, 0.075);
				}

				&:focus {
					box-shadow: inset 0 1px 6px rgba(0, 0, 0, 0.075);
				}

				> * {
					display: block;
					overflow: hidden;
					text-overflow: ellipsis;
				}
			}
		}

		&[data-cols="2"] {
			.item {
				width: 100%;
				flex-grow: 0;

				@media(min-width: $width-large) {
					width: 50%;
				}
			}
		}

		&[data-cols="3"] {
			.item {
				width: 100%;
				flex-grow: 0;

				@media( min-width: $width-medium ) {
					width: 50%;
				}

				@media( min-width: $width-large ) {
					width: 33.333%;
				}
			}
		}
	}

	// Table display.
	&.-table {
		border: 1px solid $body-border;
		border-radius: $border-radius;
		box-shadow: 0 0 0 transparent;
		overflow: hidden;
		transition: box-shadow $transition-duration;

		&:hover {
			box-shadow: 0 1px 6px rgba(0, 0, 0, 0.075);
		}

		.item {
			display: flex;
			background-color: $body-bg;
			transition: background-color $transition-duration;

			&:not(:last-child) {
				border-bottom: 1px solid $body-border;
			}

			&:hover {
				background-color: $body-bg-alt;
			}

			> * {
				flex-grow: 1;
				padding: $content-padding / 2;
			}

			> .action {
				flex-grow: 0;
				flex-shrink: 1;

				&:not(:first-child) {
					padding-left: 0;
				}
			}
		}
	}
}

// Posts.
#post-body,
.editor-preview,
.single-content {
	> *:not(:last-child) {
		margin-bottom: $content-padding;
		// margin-bottom: $content-padding / 2;
	}

	ol,
	ul {
		list-style-position: inside;
	}

	ul {
		list-style-type: disc;
	}

	ol {
		list-style-type: decimal;
	}
}

// Search.
.search-results {
	ul {
		@include list-unstyled();

		li {
			line-height: 1.4;
			white-space: normal;
		}

		li.group {
			&,
			ul {
				margin-top: $content-padding;
			}

			ul {
				border-radius: $border-radius;
				border: 1px solid $body-border;
				background-color: $body-bg;
			}

			> strong {
				display: block;
				color: $text-color-fade;
				cursor: cursor;
				user-select: none;
			}
		}

		li.all-results {
			&:not(:first-child) {
				border-top: 1px solid $body-border;
			}

			a {
				color: inherit;
				display: block;
				padding: $content-padding / 2 $content-padding;

				&:hover,
				&:focus,
				&:active {
					color: $text-color-fade;
				}
			}
		}

		&.items li {
			cursor: pointer;
			padding: $content-padding;
			background-color: $body-bg;
			transition: background-color $transition-duration;

			&:not(:last-child) {
				border-bottom: 1px solid $body-border;
			}

			&:hover {
				background-color: $body-bg-alt;
			}

			a {
				color: inherit;
			}

			strong,
			p,
			small {
				display: block;
				padding-bottom: 5px;

				&:last-child {
					padding-bottom: 0;
				}
			}

			em {
				font-style: normal;
				border-bottom: 1px dashed $color-green;
			}

			strong em {
				font-weight: 700;
			}

			p em {
				font-weight: 500;
			}
		}
	}

	> p {
		color: $text-color-fade;
	}
}
